//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TareasEntities : DbContext
    {
        public TareasEntities()
            : base("name=TareasEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Estatu> Estatus { get; set; }
        public virtual DbSet<Tarea> Tareas { get; set; }
    
        public virtual int AddTareas(string titulo, string descripcion, Nullable<System.DateTime> fechaVencimiento, Nullable<int> estado)
        {
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var fechaVencimientoParameter = fechaVencimiento.HasValue ?
                new ObjectParameter("FechaVencimiento", fechaVencimiento) :
                new ObjectParameter("FechaVencimiento", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddTareas", tituloParameter, descripcionParameter, fechaVencimientoParameter, estadoParameter);
        }
    
        public virtual int DeleteTarea(Nullable<int> idTarea)
        {
            var idTareaParameter = idTarea.HasValue ?
                new ObjectParameter("IdTarea", idTarea) :
                new ObjectParameter("IdTarea", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTarea", idTareaParameter);
        }
    
        public virtual ObjectResult<GetAllEstatus_Result> GetAllEstatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllEstatus_Result>("GetAllEstatus");
        }
    
        public virtual ObjectResult<GetAllTareas_Result> GetAllTareas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllTareas_Result>("GetAllTareas");
        }
    
        public virtual ObjectResult<GetByIdTareas_Result> GetByIdTareas(Nullable<int> idTarea)
        {
            var idTareaParameter = idTarea.HasValue ?
                new ObjectParameter("IdTarea", idTarea) :
                new ObjectParameter("IdTarea", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetByIdTareas_Result>("GetByIdTareas", idTareaParameter);
        }
    
        public virtual int UpdateTarea(Nullable<int> idTarea, string titulo, string descripcion, Nullable<System.DateTime> fechaVencimiento, Nullable<int> estado)
        {
            var idTareaParameter = idTarea.HasValue ?
                new ObjectParameter("IdTarea", idTarea) :
                new ObjectParameter("IdTarea", typeof(int));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var fechaVencimientoParameter = fechaVencimiento.HasValue ?
                new ObjectParameter("FechaVencimiento", fechaVencimiento) :
                new ObjectParameter("FechaVencimiento", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTarea", idTareaParameter, tituloParameter, descripcionParameter, fechaVencimientoParameter, estadoParameter);
        }
    }
}
